{"version":3,"sources":["src/Watcher.js","src/Observer.js","src/Compile.js","src/Vue.js"],"names":["Watcher","vm","expr","callback","Dep","target","oldValue","getVMData","newValue","data","$data","split","forEach","key","subs","watcher","push","sub","update","Observer","walk","Object","keys","defineReactive","obj","value","that","dep","defineProperty","enumerable","configurable","get","addSub","set","aValue","notify","Compile","el","document","querySelector","fragment","node2fragment","compile","appendChild","node","console","log","childNodes","createDocumentFragment","Array","from","isElementNode","compileElementNode","isTextNode","compileTextNode","length","textContent","test","CompileUtils","attrs","attributes","attr","attrName","name","isEventDirective","type","eventHandler","isDirective","nodeType","includes","setVMData","arr","index","mustache","txt","reg","RegExp","$1","trim","replace","text","html","innerHTML","model","addEventListener","e","eventType","fn","$methods","bind","error","Vue","options","$el","body","methods","proxy","window"],"mappings":";AAyDG,aAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,IAAA,QAAA,aAAA,EAlDUA,IAAAA,EAkDV,WAhDWC,SAAAA,EAAAA,EAAIC,EAAMC,GAAU,EAAA,KAAA,GACzBF,KAAAA,GAAKA,EACLC,KAAAA,KAAOA,EACPC,KAAAA,SAAWA,EAEhBC,EAAIC,OAAS,KAERC,KAAAA,SAAW,KAAKC,UAAUN,EAAIC,GAEnCE,EAAIC,OAAS,KAuCd,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SApCQ,MAAA,WAEHC,IAAAA,EAAW,KAAKA,SAChBE,EAAW,KAAKD,UAAU,KAAKN,GAAI,KAAKC,MAExCI,IAAaE,GACVL,KAAAA,SAASK,EAAUF,KA8B3B,CAAA,IAAA,YAzBSL,MAAAA,SAAAA,EAAIC,GACRO,IAAAA,EAAOR,EAAGS,MAIPD,OAHPP,EAAKS,MAAM,KAAKC,QAAQ,SAAAC,GACtBJ,EAAOA,EAAKI,KAEPJ,MAoBR,EAAA,GAAA,QAAA,QAAA,EAfUL,IAAAA,EAeV,WAda,SAAA,IAAA,EAAA,KAAA,GACPU,KAAAA,KAAO,GAab,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,SATMC,MAAAA,SAAAA,GACAD,KAAAA,KAAKE,KAAKD,KAQhB,CAAA,IAAA,SAJQ,MAAA,WACFD,KAAAA,KAAKF,QAAQ,SAAAK,GAChBA,EAAIC,eAEP,EAAA,GAAA,QAAA,IAAA;;ACXA,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,cAAA,EA9CH,IAAA,EAAA,QAAA,aA8CG,SAAA,EAAA,GAAA,OAAA,EAAA,mBAAA,QAAA,iBAAA,OAAA,SAAA,SAAA,GAAA,cAAA,GAAA,SAAA,GAAA,OAAA,GAAA,mBAAA,QAAA,EAAA,cAAA,QAAA,IAAA,OAAA,UAAA,gBAAA,IAAA,GAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA5CUC,IAAAA,EA4CV,WA3CWV,SAAAA,EAAAA,GAAM,EAAA,KAAA,GACXA,KAAAA,KAAOA,EACPW,KAAAA,KAAKX,GAyCX,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,OArCIA,MAAAA,SAAAA,GAAM,IAAA,EAAA,KAEJA,GAAwB,WAAhB,EAAOA,IAEpBY,OAAOC,KAAKb,GAAMG,QAAQ,SAAAC,GAGxB,EAAKU,eAAed,EAAMI,EAAKJ,EAAKI,IAGpC,EAAKO,KAAKX,EAAKI,QA2BlB,CAAA,IAAA,iBAtBcW,MAAAA,SAAAA,EAAKX,EAAKY,GACnBC,IAAAA,EAAO,KACPC,EAAM,IAAIvB,EAAJ,IACViB,OAAOO,eAAeJ,EAAKX,EAAK,CAC9BgB,YAAY,EACZC,cAAc,EACdC,IAAM,WAGGN,OADHpB,EAAAA,IAAAA,QAAUsB,EAAIK,OAAO5B,EAAIC,IAAAA,QACtBoB,GAETQ,IAAIC,SAAAA,GACET,IAAUS,IACdT,EAAQS,EAGRR,EAAKN,KAAKc,GAGVP,EAAIQ,iBAGT,EAAA,GAAA,QAAA,SAAA;;AC8CH,aAAA,OAAA,eAAA,QAAA,aAAA,CAAA,OAAA,IAAA,QAAA,aAAA,EA5FA,IAAA,EAAA,QAAA,gBA4FA,SAAA,EAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wDAAA,SAAA,EAAA,EAAA,GAAA,IAAA,EAAA,GAAA,GAAA,EAAA,GAAA,EAAA,OAAA,EAAA,IAAA,IAAA,IAAA,EAAA,EAAA,EAAA,OAAA,cAAA,GAAA,EAAA,EAAA,QAAA,QAAA,EAAA,KAAA,EAAA,QAAA,GAAA,EAAA,SAAA,GAAA,GAAA,IAAA,MAAA,GAAA,GAAA,EAAA,EAAA,EAAA,QAAA,IAAA,GAAA,MAAA,EAAA,QAAA,EAAA,SAAA,QAAA,GAAA,EAAA,MAAA,GAAA,OAAA,EAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EA1FaC,IAAAA,EA0Fb,WAxFcC,SAAAA,EAAAA,EAAIpC,GAIV,GAJc,EAAA,KAAA,GACboC,KAAAA,GAAmB,iBAAPA,EAAkBC,SAASC,cAAcF,GAAMA,EAC3DpC,KAAAA,GAAKA,EAEN,KAAKoC,GAAI,CACLG,IAAAA,EAAW,KAAKC,cAAc,KAAKJ,IACpCK,KAAAA,QAAQF,GACRH,KAAAA,GAAGM,YAAYH,IAiF1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,gBA7EgBI,MAAAA,SAAAA,GACZC,QAAQC,IAAIF,EAAKG,YACbP,IAAAA,EAAWF,SAASU,yBACpBD,EAAaH,EAAKG,WAMfP,OAJPS,MAAMC,KAAKH,GAAYnC,QAAQ,SAAAgC,GAC7BJ,EAASG,YAAYC,KAGhBJ,IAoEX,CAAA,IAAA,UAhEUA,MAAAA,SAAAA,GAAU,IAAA,EAAA,KACZO,EAAaP,EAASO,WAC1BE,MAAMC,KAAKH,GAAYnC,QAAQ,SAAAgC,GAGzB,EAAKO,cAAcP,IACrB,EAAKQ,mBAAmBR,GAItB,EAAKS,WAAWT,IAClB,EAAKU,gBAAgBV,GAInBA,EAAKG,YAAcH,EAAKG,WAAWQ,OAAS,GAC9C,EAAKb,QAAQE,OAgDrB,CAAA,IAAA,kBA3CkBA,MAAAA,SAAAA,GACV1C,IAAAA,EAAO0C,EAAKY,YACN,mBACFC,KAAKvD,IACXwD,EAAY,SAAad,EAAM,KAAK3C,GAAIC,KAuC9C,CAAA,IAAA,qBAnCqB0C,MAAAA,SAAAA,GAAM,IAAA,EAAA,KACnBe,EAAQf,EAAKgB,WACjBX,MAAMC,KAAKS,GAAO/C,QAAQ,SAAAiD,GACpBC,IAAAA,EAAWD,EAAKE,KAEhB,GAAA,EAAKC,iBAAiBF,GAAW,CAC/B5D,IAAAA,EAAO2D,EAAKpC,MACTwC,EAF4B,EAEpBH,EAASnD,MAAM,KAFK,GAAA,GAGnC+C,EAAaQ,aAAatB,EAAM,EAAK3C,GAAIgE,EAAM/D,GAE7C,GAAA,EAAKiE,YAAYL,GAAW,CAC1B5D,IAAAA,EAAO2D,EAAKpC,MACTwC,EAFuB,EAEfH,EAASnD,MAAM,KAFA,GAAA,GAG9B+C,EAAaO,GAAMrB,EAAM,EAAK3C,GAAIC,QAsB1C,CAAA,IAAA,aAjBa0C,MAAAA,SAAAA,GACFA,OAAkB,IAAlBA,EAAKwB,WAgBhB,CAAA,IAAA,gBAbgBxB,MAAAA,SAAAA,GACLA,OAAkB,IAAlBA,EAAKwB,WAYhB,CAAA,IAAA,mBATmBL,MAAAA,SAAAA,GACRA,OAAAA,EAAKM,SAAS,OAQzB,CAAA,IAAA,cALcN,MAAAA,SAAAA,GACHA,OAAAA,EAAKM,SAAS,UAIzB,EAAA,GAAA,QAAA,QAAA,EAAA,IAAIX,EAAe,CAEjBnD,UAAUN,SAAAA,EAAIC,GACRO,IAAAA,EAAOR,EAAGS,MAIPD,OAHPP,EAAKS,MAAM,KAAKC,QAAQ,SAAAC,GACtBJ,EAAOA,EAAKI,KAEPJ,GAAQ,IAGjB6D,UAAUrE,SAAAA,EAAIC,EAAMuB,GACdhB,IAAAA,EAAOR,EAAGS,MACV6D,EAAMrE,EAAKS,MAAM,KACrB4D,EAAI3D,QAAQ,SAACC,EAAK2D,GACZA,EAAQD,EAAIhB,OAAS,EACvB9C,EAAOA,EAAKI,GAEZJ,EAAKI,GAAOY,GAAS,MAK3BgD,SAAS7B,SAAAA,EAAM3C,GACTyE,IAAAA,EAAM9B,EAAKY,YACXmB,EAAM,eACNA,GAAAA,EAAIlB,KAAKiB,GAAM,CACbxE,IAAAA,EAAO0E,OAAOC,GAAGC,OACrBlC,EAAKY,YAAckB,EAAIK,QAAQJ,EAAK,KAAKpE,UAAUN,EAAIC,IACnDF,IAAAA,EAAJ,QAAYC,EAAIC,EAAM,SAAAM,GACpBoC,EAAKY,YAAckB,EAAIK,QAAQJ,EAAKnE,OAK1CwE,KAAKpC,SAAAA,EAAM3C,EAAIC,GACb0C,EAAKY,YAAc,KAAKjD,UAAUN,EAAIC,GAClCF,IAAAA,EAAJ,QAAYC,EAAIC,EAAM,SAAAM,GACpBoC,EAAKY,YAAchD,KAIvByE,KAAKrC,SAAAA,EAAM3C,EAAIC,GACb0C,EAAKsC,UAAY,KAAK3E,UAAUN,EAAIC,GAChCF,IAAAA,EAAJ,QAAYC,EAAIC,EAAM,SAAAM,GACpBoC,EAAKsC,UAAY1E,KAIrB2E,MAAMvC,SAAAA,EAAM3C,EAAIC,GAAM,IAAA,EAAA,KAEpB0C,EAAKnB,MAAQ,KAAKlB,UAAUN,EAAIC,GAG5BF,IAAAA,EAAJ,QAAYC,EAAIC,EAAM,SAAAM,GACpBoC,EAAKnB,MAAQjB,IAGfoC,EAAKwC,iBAAiB,QAAS,SAACC,GAE9B,EAAKf,UAAUrE,EAAIC,EAAMmF,EAAEhF,OAAOoB,UAItCyC,aAAatB,SAAAA,EAAM3C,EAAIqF,EAAWpF,GAE5BqF,IAAAA,EAAKtF,EAAGuF,UAAYvF,EAAGuF,SAAStF,GAEhC,IACF0C,EAAKwC,iBAAiBE,EAAWC,EAAGE,KAAKxF,IACzC,MAAOyF,GACP7C,QAAQ6C,MAAM,oBAAsBxF;;ACxH1C,aA1CA,IAAA,EAAA,QAAA,iBACA,EAAA,QAAA,gBAyCA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EAhCMyF,IAAAA,EAgCN,WA/B4B,SAAA,IAAdC,IAAAA,EAAU,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GAAI,EAAA,KAAA,GACnBC,KAAAA,IAAMD,EAAQvD,IAAMC,SAASwD,KAC7BpF,KAAAA,MAAQkF,EAAQnF,KAChB+E,KAAAA,SAAWI,EAAQG,QAGnBC,KAAAA,MAAM,KAAKtF,OAGZS,IAAAA,EAAJ,SAAa,KAAKT,OAEd0B,IAAAA,EAAJ,QAAY,KAAKyD,IAAK,MAoB1B,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,QAjBmB,MAAA,WAAA,IAAA,EAAA,KAAXpF,EAAO,UAAA,OAAA,QAAA,IAAA,UAAA,GAAA,UAAA,GAAA,GACXY,OAAOC,KAAKb,GAAMG,QAAQ,SAAAC,GAExBQ,OAAOO,eAAe,EAAMf,EAAK,CAC/BgB,YAAY,EACZC,cAAc,EACdG,IAAIR,SAAAA,GACGf,KAAAA,MAAMG,GAAOY,GAEpBM,IAAM,WACG,OAAA,KAAKrB,MAAMG,YAO5B,EAAA,GAAAoF,OAAON,IAAMA","file":"Vue.a61019c3.js","sourceRoot":"..","sourcesContent":["/**\n *\n * @param {*} vm 当前的vue实例\n * @param {*} expr data中数据的名字\n * @param {*} callback  一旦数据改变,则需要调用callback\n */\n\nexport class Watcher {\n\n  constructor(vm, expr, callback) {\n    this.vm = vm\n    this.expr = expr\n    this.callback = callback\n\n    Dep.target = this\n\n    this.oldValue = this.getVMData(vm, expr)\n    // 防止给 data 对象重复添加 Watcher\n    Dep.target = null\n  }\n\n  update() {\n    // 获取新老值\n    let oldValue = this.oldValue\n    let newValue = this.getVMData(this.vm, this.expr)\n\n    if (oldValue !== newValue) {\n      this.callback(newValue, oldValue)\n    }\n  }\n\n  // 取最深属性的值\n  getVMData(vm, expr) {\n    let data = vm.$data\n    expr.split('.').forEach(key => {\n      data = data[key]\n    })\n    return data\n  }\n}\n\n// 订阅者模型\nexport class Dep {\n  constructor() {\n    this.subs = []\n  }\n\n  // 添加订阅者\n  addSub(watcher) {\n    this.subs.push(watcher)\n  }\n\n  // 通知\n  notify() {\n    this.subs.forEach(sub => {\n      sub.update()\n    })\n  }\n}\n","import {Dep} from \"./Watcher\";\n\nexport class Observer {\n  constructor(data) {\n    this.data = data\n    this.walk(data)\n  }\n\n  // 遍历walk中所有的数据，劫持 setter 和 getter\n  walk(data) {\n\n    if (!data || typeof data !== 'object') return\n\n    Object.keys(data).forEach(key => {\n\n      // 给 data 添加 getter 和 setter\n      this.defineReactive(data, key, data[key])\n\n      // 递归进行深度劫持\n      this.walk(data[key])\n    })\n  }\n\n  // 定义响应式数据\n  defineReactive(obj, key, value) {\n    let that = this\n    let dep = new Dep()\n    Object.defineProperty(obj, key, {\n      enumerable: true,\n      configurable: true,\n      get() {\n        // 如果 Dep.target 中有 watcher 对象，则存储到订阅者数组中\n        Dep.target && dep.addSub(Dep.target)\n        return value\n      },\n      set(aValue) {\n        if (value === aValue) return\n        value = aValue\n\n        // 外层递归，如果设置的值是一个对象，那么这个对象也应该是响应式的\n        that.walk(aValue)\n\n        // 发布通知，让所有订阅者更新内容\n        dep.notify()\n      }\n    })\n  }\n}\n","import {Watcher} from './Watcher.js'\n\nexport class Compile {\n\n  constructor(el, vm) {\n    this.el = typeof el === \"string\" ? document.querySelector(el) : el\n    this.vm = vm\n    // 解析模板内容\n    if (this.el) {\n      const fragment = this.node2fragment(this.el)\n      this.compile(fragment)\n      this.el.appendChild(fragment)\n    }\n  }\n\n  node2fragment(node) {\n    console.log(node.childNodes)\n    let fragment = document.createDocumentFragment()\n    let childNodes = node.childNodes\n\n    Array.from(childNodes).forEach(node => {\n      fragment.appendChild(node)\n    })\n\n    return fragment\n  }\n\n  // 解析fragment里面的节点\n  compile(fragment) {\n    let childNodes = fragment.childNodes\n    Array.from(childNodes).forEach(node => {\n\n      // 元素节点，解析指令\n      if (this.isElementNode(node)) {\n        this.compileElementNode(node)\n      }\n\n      // 文本节点，解析差值表达式\n      if (this.isTextNode(node)) {\n        this.compileTextNode(node)\n      }\n\n      // 递归解析元素\n      if (node.childNodes && node.childNodes.length > 0) {\n        this.compile(node)\n      }\n    })\n  }\n\n  compileTextNode(node) {\n    let expr = node.textContent\n    let reg = /\\{\\{([^}]+)\\}\\}/g\n    if (reg.test(expr)) {\n      CompileUtils['mustache'](node, this.vm, expr)\n    }\n  }\n\n  compileElementNode(node) {\n    let attrs = node.attributes\n    Array.from(attrs).forEach(attr => {\n      let attrName = attr.name\n      // 事件指令\n      if (this.isEventDirective(attrName)) {\n        let expr = attr.value\n        let [, type] = attrName.split('@')\n        CompileUtils.eventHandler(node, this.vm, type, expr)\n      }\n      if (this.isDirective(attrName)) {\n        let expr = attr.value\n        let [, type] = attrName.split('-')\n        CompileUtils[type](node, this.vm, expr)\n      }\n    })\n  }\n\n  isTextNode(node) {\n    return node.nodeType === 3\n  }\n\n  isElementNode(node) {\n    return node.nodeType === 1\n  }\n\n  isEventDirective(name) {\n    return name.includes('@')\n  }\n\n  isDirective(name) {\n    return name.includes('v-')\n  }\n}\n\nlet CompileUtils = {\n  // 取最深属性的值\n  getVMData(vm, expr) {\n    let data = vm.$data\n    expr.split('.').forEach(key => {\n      data = data[key]\n    })\n    return data || ''\n  },\n  // 赋最深属性的值\n  setVMData(vm, expr, value) {\n    let data = vm.$data\n    let arr = expr.split('.')\n    arr.forEach((key, index) => {\n      if (index < arr.length - 1) {\n        data = data[key]\n      } else {\n        data[key] = value || ''\n      }\n    })\n  },\n  // 解析插值表达式\n  mustache(node, vm) {\n    let txt = node.textContent\n    let reg = /\\{\\{(.+)\\}\\}/\n    if (reg.test(txt)) {\n      let expr = RegExp.$1.trim()\n      node.textContent = txt.replace(reg, this.getVMData(vm, expr))\n      new Watcher(vm, expr, newValue => {\n        node.textContent = txt.replace(reg, newValue)\n      })\n    }\n  },\n  // 解析v-text\n  text(node, vm, expr) {\n    node.textContent = this.getVMData(vm, expr)\n    new Watcher(vm, expr, newValue => {\n      node.textContent = newValue\n    })\n  },\n  // 解析v-html\n  html(node, vm, expr) {\n    node.innerHTML = this.getVMData(vm, expr)\n    new Watcher(vm, expr, newValue => {\n      node.innerHTML = newValue\n    })\n  },\n  // 解析v-model\n  model(node, vm, expr) {\n    // 赋初始值\n    node.value = this.getVMData(vm, expr)\n\n    // 订阅并处理\n    new Watcher(vm, expr, newValue => {\n      node.value = newValue\n    })\n\n    node.addEventListener('input', (e) => {\n      // 深度改变数据\n      this.setVMData(vm, expr, e.target.value)\n    })\n  },\n  // 解析事件绑定@\n  eventHandler(node, vm, eventType, expr) {\n\n    let fn = vm.$methods && vm.$methods[expr]\n\n    try {\n      node.addEventListener(eventType, fn.bind(vm))\n    } catch (error) {\n      console.error('methods里面没有找到该方法：' + expr)\n    }\n  }\n}\n\n","import {Observer} from './Observer.js'\nimport {Compile} from './Compile.js'\n\n/**\n * 入口文件\n * 1. 将data，methods挂载根实例中\n * 2. 监听 data 属性的变化\n * 3. 编译挂载点内的指令和插值表达式\n */\n\nclass Vue {\n  constructor(options = {}) {\n    this.$el = options.el || document.body\n    this.$data = options.data\n    this.$methods = options.methods\n\n    // 将data对象挂载根实例中\n    this.proxy(this.$data)\n\n    // 监听数据\n    new Observer(this.$data)\n\n    new Compile(this.$el, this)\n  }\n\n  proxy(data = {}) {\n    Object.keys(data).forEach(key => {\n      // 这里的this 指向 vue 实例\n      Object.defineProperty(this, key, {\n        enumerable: true,\n        configurable: true,\n        set(value) {\n          this.$data[key] = value\n        },\n        get() {\n          return this.$data[key]\n        }\n      })\n    })\n  }\n}\n\nwindow.Vue = Vue\n"]}